{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ColorUtils_1 = require(\"../../Utils/ColorUtils\");\n\nvar Constants_1 = require(\"../../Utils/Constants\");\n\nvar Linker = function () {\n  function Linker() {}\n\n  Linker.link = function (p1, container) {\n    var _a;\n\n    var optOpacity = p1.particlesOptions.lineLinked.opacity;\n    var optDistance = (_a = p1.lineLinkedDistance) !== null && _a !== void 0 ? _a : container.retina.lineLinkedDistance;\n    var pos = {\n      x: p1.position.x + p1.offset.x,\n      y: p1.position.y + p1.offset.y\n    };\n\n    for (var _i = 0, _b = container.particles.spatialGrid.queryRadiusWithDistance(pos, optDistance); _i < _b.length; _i++) {\n      var p2 = _b[_i];\n\n      if (p1 === p2.particle || !p2.particle.particlesOptions.lineLinked.enable) {\n        continue;\n      }\n\n      var opacityLine = optOpacity - p2.distance * optOpacity / optDistance;\n\n      if (opacityLine > 0) {\n        if (!container.particles.lineLinkedColor) {\n          var optColor = p1.particlesOptions.lineLinked.color;\n          var color = typeof optColor === \"string\" ? optColor : optColor.value;\n\n          if (color === Constants_1.Constants.randomColorValue) {\n            if (p1.particlesOptions.lineLinked.consent) {\n              container.particles.lineLinkedColor = ColorUtils_1.ColorUtils.colorToRgb({\n                value: color\n              });\n            } else if (p1.particlesOptions.lineLinked.blink) {\n              container.particles.lineLinkedColor = Constants_1.Constants.randomColorValue;\n            } else {\n              container.particles.lineLinkedColor = Constants_1.Constants.midColorValue;\n            }\n          } else {\n            container.particles.lineLinkedColor = ColorUtils_1.ColorUtils.colorToRgb({\n              value: color\n            });\n          }\n        }\n\n        if (p2.particle.links.indexOf(p1) == -1 && p1.links.indexOf(p2.particle) == -1) {\n          p1.links.push(p2.particle);\n          container.canvas.drawLinkedLine(p1, p2.particle, opacityLine);\n        }\n      }\n    }\n  };\n\n  return Linker;\n}();\n\nexports.Linker = Linker;","map":{"version":3,"sources":["C:/Users/User/face-recognition-app/node_modules/tsparticles/dist/Classes/Interactions/Particles/Linker.js"],"names":["Object","defineProperty","exports","value","ColorUtils_1","require","Constants_1","Linker","link","p1","container","_a","optOpacity","particlesOptions","lineLinked","opacity","optDistance","lineLinkedDistance","retina","pos","x","position","offset","y","_i","_b","particles","spatialGrid","queryRadiusWithDistance","length","p2","particle","enable","opacityLine","distance","lineLinkedColor","optColor","color","Constants","randomColorValue","consent","ColorUtils","colorToRgb","blink","midColorValue","links","indexOf","push","canvas","drawLinkedLine"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ColorUtils_1 = require(\"../../Utils/ColorUtils\");\nvar Constants_1 = require(\"../../Utils/Constants\");\nvar Linker = (function () {\n    function Linker() {\n    }\n    Linker.link = function (p1, container) {\n        var _a;\n        var optOpacity = p1.particlesOptions.lineLinked.opacity;\n        var optDistance = (_a = p1.lineLinkedDistance) !== null && _a !== void 0 ? _a : container.retina.lineLinkedDistance;\n        var pos = {\n            x: p1.position.x + p1.offset.x,\n            y: p1.position.y + p1.offset.y,\n        };\n        for (var _i = 0, _b = container.particles.spatialGrid.queryRadiusWithDistance(pos, optDistance); _i < _b.length; _i++) {\n            var p2 = _b[_i];\n            if (p1 === p2.particle || !p2.particle.particlesOptions.lineLinked.enable) {\n                continue;\n            }\n            var opacityLine = optOpacity - (p2.distance * optOpacity) / optDistance;\n            if (opacityLine > 0) {\n                if (!container.particles.lineLinkedColor) {\n                    var optColor = p1.particlesOptions.lineLinked.color;\n                    var color = typeof optColor === \"string\" ? optColor : optColor.value;\n                    if (color === Constants_1.Constants.randomColorValue) {\n                        if (p1.particlesOptions.lineLinked.consent) {\n                            container.particles.lineLinkedColor = ColorUtils_1.ColorUtils.colorToRgb({ value: color });\n                        }\n                        else if (p1.particlesOptions.lineLinked.blink) {\n                            container.particles.lineLinkedColor = Constants_1.Constants.randomColorValue;\n                        }\n                        else {\n                            container.particles.lineLinkedColor = Constants_1.Constants.midColorValue;\n                        }\n                    }\n                    else {\n                        container.particles.lineLinkedColor = ColorUtils_1.ColorUtils.colorToRgb({ value: color });\n                    }\n                }\n                if (p2.particle.links.indexOf(p1) == -1 && p1.links.indexOf(p2.particle) == -1) {\n                    p1.links.push(p2.particle);\n                    container.canvas.drawLinkedLine(p1, p2.particle, opacityLine);\n                }\n            }\n        }\n    };\n    return Linker;\n}());\nexports.Linker = Linker;\n"]},"metadata":{},"sourceType":"script"}